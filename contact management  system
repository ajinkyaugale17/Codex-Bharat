import tkinter as tk
from tkinter import messagebox, simpledialog
import json
import os

# File where contacts will be saved
CONTACTS_FILE = "contacts.json"

# Load contacts from file
def load_contacts():
    if os.path.exists(CONTACTS_FILE):
        with open(CONTACTS_FILE, 'r') as file:
            return json.load(file)
    return {}

# Save contacts to file
def save_contacts(contacts):
    with open(CONTACTS_FILE, 'w') as file:
        json.dump(contacts, file, indent=4)

# Add a new contact
def add_contact():
    name = name_entry.get().strip()
    phone = phone_entry.get().strip()
    
    if name == "" or phone == "":
        messagebox.showerror("Input Error", "Both name and phone number are required.")
        return
    
    if name in contacts:
        messagebox.showerror("Duplicate Contact", "This contact already exists.")
        return
    
    contacts[name] = phone
    save_contacts(contacts)
    update_contact_list()
    messagebox.showinfo("Success", f"Contact '{name}' added successfully.")
    clear_entries()

# Edit an existing contact
def edit_contact():
    selected = contact_listbox.curselection()
    if not selected:
        messagebox.showerror("Selection Error", "Please select a contact to edit.")
        return
    
    name = contact_listbox.get(selected)
    phone = contacts[name]
    
    new_phone = simpledialog.askstring("Edit Contact", f"Edit phone number for {name}:", initialvalue=phone)
    if new_phone:
        contacts[name] = new_phone
        save_contacts(contacts)
        update_contact_list()
        messagebox.showinfo("Success", f"Contact '{name}' updated.")
        
# Delete a contact
def delete_contact():
    selected = contact_listbox.curselection()
    if not selected:
        messagebox.showerror("Selection Error", "Please select a contact to delete.")
        return
    
    name = contact_listbox.get(selected)
    if messagebox.askyesno("Delete Contact", f"Are you sure you want to delete '{name}'?"):
        del contacts[name]
        save_contacts(contacts)
        update_contact_list()
        messagebox.showinfo("Deleted", f"Contact '{name}' deleted.")
        
# Search for a contact
def search_contact():
    search_term = search_entry.get().strip().lower()
    
    if search_term == "":
        messagebox.showerror("Input Error", "Please enter a search term.")
        return
    
    results = [name for name in contacts if search_term in name.lower()]
    
    if results:
        contact_listbox.delete(0, tk.END)
        for name in results:
            contact_listbox.insert(tk.END, name)
    else:
        messagebox.showinfo("No Results", "No contacts found.")

# Update the contact listbox
def update_contact_list():
    contact_listbox.delete(0, tk.END)
    for name in contacts:
        contact_listbox.insert(tk.END, name)

# Clear input fields
def clear_entries():
    name_entry.delete(0, tk.END)
    phone_entry.delete(0, tk.END)

# Initialize the GUI
def create_gui():
    global name_entry, phone_entry, contact_listbox, search_entry
    
    root = tk.Tk()
    root.title("Contact Management System")
    root.geometry("400x400")
    
    # Labels and Entries for Contact Info
    tk.Label(root, text="Name:").pack(pady=5)
    name_entry = tk.Entry(root)
    name_entry.pack(pady=5)
    
    tk.Label(root, text="Phone:").
